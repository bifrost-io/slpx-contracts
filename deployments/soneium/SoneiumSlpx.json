{
  "address": "0x9D40Ca58eF5392a8fB161AB27c7f61de5dfBF0E2",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "channelId",
          "type": "uint32"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AstarReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "enum Types.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_dstGasForCall",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "estimateSendAndCallFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Types.Operation",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "minAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "channelId",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_dstGasForCall",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remoteContract",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum Types.Operation",
          "name": "_operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_remoteContract",
          "type": "address"
        }
      ],
      "name": "setRemoteContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x24173604bea80487e66b48868c2491990721a4009ece6a5ec4f5357551357984",
  "receipt": {
    "to": null,
    "from": "0x4597C97a43dFBb4a398E2b16AA9cE61f90d801DD",
    "contractAddress": "0x9D40Ca58eF5392a8fB161AB27c7f61de5dfBF0E2",
    "transactionIndex": 1,
    "gasUsed": "1253140",
    "logsBloom": "0x
    "blockHash": "0xd3861a9572634959dcf1afe4a4c342d7a756434d4d4dcdbd673391001cd125cb",
    "transactionHash": "0x24173604bea80487e66b48868c2491990721a4009ece6a5ec4f5357551357984",
    "logs": [],
    "blockNumber": 1853896,
    "cumulativeGasUsed": "1297054",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b2f897236b5a0029269bb8032ce1c31f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"channelId\",\"type\":\"uint32\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AstarReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"enum Types.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_dstGasForCall\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"estimateSendAndCallFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Types.Operation\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"minAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"channelId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_dstGasForCall\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Types.Operation\",\"name\":\"_operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_remoteContract\",\"type\":\"address\"}],\"name\":\"setRemoteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SoneiumSlpx.sol\":\"SoneiumSlpx\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Client} from \\\"../libraries/Client.sol\\\";\\n\\ninterface IRouterClient {\\n  error UnsupportedDestinationChain(uint64 destChainSelector);\\n  error InsufficientFeeTokenAmount();\\n  error InvalidMsgValue();\\n\\n  /// @notice Checks if the given chain ID is supported for sending/receiving.\\n  /// @param chainSelector The chain to check.\\n  /// @return supported is true if it is supported, false if not.\\n  function isChainSupported(uint64 chainSelector) external view returns (bool supported);\\n\\n  /// @notice Gets a list of all supported tokens which can be sent or received\\n  /// to/from a given chain id.\\n  /// @param chainSelector The chainSelector.\\n  /// @return tokens The addresses of all tokens that are supported.\\n  function getSupportedTokens(uint64 chainSelector) external view returns (address[] memory tokens);\\n\\n  /// @param destinationChainSelector The destination chainSelector\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return fee returns execution fee for the message\\n  /// delivery to destination chain, denominated in the feeToken specified in the message.\\n  /// @dev Reverts with appropriate reason upon invalid message.\\n  function getFee(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage memory message\\n  ) external view returns (uint256 fee);\\n\\n  /// @notice Request a message to be sent to the destination chain\\n  /// @param destinationChainSelector The destination chain ID\\n  /// @param message The cross-chain CCIP message including data and/or tokens\\n  /// @return messageId The message ID\\n  /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\\n  /// the overpayment with no refund.\\n  /// @dev Reverts with appropriate reason upon invalid message.\\n  function ccipSend(\\n    uint64 destinationChainSelector,\\n    Client.EVM2AnyMessage calldata message\\n  ) external payable returns (bytes32);\\n}\\n\",\"keccak256\":\"0x7f2fdd93e516b7476c6fab099f6806adf5ceaf399b0cc415f6b9ede890f2379b\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// End consumer library.\\nlibrary Client {\\n  /// @dev RMN depends on this struct, if changing, please notify the RMN maintainers.\\n  struct EVMTokenAmount {\\n    address token; // token address on the local chain.\\n    uint256 amount; // Amount of tokens.\\n  }\\n\\n  struct Any2EVMMessage {\\n    bytes32 messageId; // MessageId corresponding to ccipSend on source.\\n    uint64 sourceChainSelector; // Source chain selector.\\n    bytes sender; // abi.decode(sender) if coming from an EVM chain.\\n    bytes data; // payload sent in original message.\\n    EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\\n  }\\n\\n  // If extraArgs is empty bytes, the default is 200k gas limit.\\n  struct EVM2AnyMessage {\\n    bytes receiver; // abi.encode(receiver address) for dest EVM chains\\n    bytes data; // Data payload\\n    EVMTokenAmount[] tokenAmounts; // Token transfers\\n    address feeToken; // Address of feeToken. address(0) means you will send msg.value.\\n    bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\\n  }\\n\\n  // bytes4(keccak256(\\\"CCIP EVMExtraArgsV1\\\"));\\n  bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\\n  struct EVMExtraArgsV1 {\\n    uint256 gasLimit;\\n  }\\n\\n  function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\\n    return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\\n  }\\n}\\n\",\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwner} from \\\"./ConfirmedOwner.sol\\\";\\n\\n/// @title The OwnerIsCreator contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract OwnerIsCreator is ConfirmedOwner {\\n  constructor() ConfirmedOwner(msg.sender) {}\\n}\\n\",\"keccak256\":\"0x895af02d6a3df2930bbb6ec1f2d68118b492ca6e710ba0c34fcb6b574a0906aa\",\"license\":\"MIT\"},\"@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/SoneiumSlpx.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IRouterClient} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\\\";\\nimport {OwnerIsCreator} from \\\"@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol\\\";\\nimport {Client} from \\\"@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\\\";\\nimport \\\"./interfaces/IOFTV2.sol\\\";\\nimport \\\"./interfaces/Types.sol\\\";\\n\\ncontract SoneiumSlpx is OwnerIsCreator {\\n    address private constant vAstrOFT = 0x60336f9296C79dA4294A19153eC87F8E52158e5F;\\n    uint16 private constant destChainId = 210;\\n    bytes32 public remoteContract;\\n\\n    // Astar Chain Selector\\n    uint64 private constant astarChainSelector = 6422105447186081193;\\n    address private constant AstrToken = 0x2CAE934a1e84F693fbb78CA5ED3B0A6893259441;\\n    address private constant SoneiumRouter = 0x8C8B88d827Fe14Df2bc6392947d513C86afD6977;\\n    address public AstarReceiver;\\n\\n    mapping(Types.Operation => uint256) public minAmount;\\n\\n    event Mint(address indexed caller, uint256 indexed amount, address indexed receiver, uint32 channelId);\\n    event Redeem(address indexed caller, uint256 indexed amount);\\n\\n    function setRemoteContract(address _remoteContract) public onlyOwner {\\n        require(_remoteContract != address(0), \\\"Invalid remoteContract\\\");\\n        AstarReceiver = _remoteContract;\\n        remoteContract = bytes32(uint256(uint160(_remoteContract)));\\n    }\\n\\n    function setMinAmount(\\n        Types.Operation _operation,\\n        uint256 _minAmount\\n    ) public onlyOwner {\\n        require(_minAmount != 0, \\\"Invalid minAmount\\\");\\n        minAmount[_operation] = _minAmount;\\n    }\\n\\n    function mint(uint256 _amount, address receiver, uint32 channelId, uint256 gasLimit) external payable {\\n        require(_amount >= minAmount[Types.Operation.Mint], \\\"amount too small\\\");\\n        require(gasLimit != 0, \\\"amount too small\\\");\\n        IERC20(AstrToken).transferFrom(msg.sender, address(this), _amount);\\n\\n        // set the token amounts\\n        Client.EVMTokenAmount[]\\n            memory tokenAmounts = new Client.EVMTokenAmount[](1);\\n        Client.EVMTokenAmount memory tokenAmount = Client.EVMTokenAmount({\\n            token: AstrToken,\\n            amount: _amount\\n        });\\n        tokenAmounts[0] = tokenAmount;\\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\\n        bytes memory data = abi.encode(msg.sender, Types.Operation.Mint, receiver, channelId);\\n        Client.EVM2AnyMessage memory evm2AnyMessage = Client.EVM2AnyMessage({\\n            receiver: abi.encode(AstarReceiver), // ABI-encoded receiver address\\n            data: data, // ABI-encoded string message\\n            tokenAmounts: tokenAmounts, // Tokens amounts\\n            extraArgs: Client._argsToBytes(\\n                Client.EVMExtraArgsV1({gasLimit: gasLimit}) // Additional arguments, setting gas limit and non-strict sequency mode\\n            ),\\n            feeToken: address(0) // Setting feeToken to zero address, indicating native asset will be used for fees\\n        });\\n\\n        // Initialize a router client instance to interact with cross-chain router\\n        IRouterClient router = IRouterClient(SoneiumRouter);\\n\\n        // approve the Router to spend tokens on contract's behalf. I will spend the amount of the given token\\n        IERC20(AstrToken).approve(address(router), _amount);\\n\\n        // Get the fee required to send the message\\n        uint256 estimateFee = router.getFee(astarChainSelector, evm2AnyMessage);\\n        require(msg.value >= estimateFee, \\\"too small fee\\\");\\n        if (msg.value != estimateFee) {\\n            uint256 refundAmount = msg.value - estimateFee;\\n            (bool success, ) = msg.sender.call{value: refundAmount}(\\\"\\\");\\n            require(success, \\\"failed to refund\\\");\\n        }\\n\\n        // Send the message through the router and store the returned message ID\\n        router.ccipSend{value: estimateFee}(astarChainSelector, evm2AnyMessage);\\n        emit Mint(msg.sender, _amount, receiver, channelId);\\n    }\\n\\n    function redeem(\\n        uint256 _amount,\\n        uint64 _dstGasForCall,\\n        bytes calldata _adapterParams\\n    ) external payable {\\n        require(\\n            _amount >= minAmount[Types.Operation.Redeem],\\n            \\\"amount too small\\\"\\n        );\\n        ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams(\\n            payable(msg.sender),\\n            address(0),\\n            _adapterParams\\n        );\\n\\n        (uint256 estimateFee, bytes memory payload) = estimateSendAndCallFee(\\n            msg.sender,\\n            Types.Operation.Redeem,\\n            _amount,\\n            0,\\n            _dstGasForCall,\\n            _adapterParams\\n        );\\n        require(msg.value >= estimateFee, \\\"too small fee\\\");\\n        if (msg.value != estimateFee) {\\n            uint256 refundAmount = msg.value - estimateFee;\\n            (bool success, ) = msg.sender.call{value: refundAmount}(\\\"\\\");\\n            require(success, \\\"failed to refund\\\");\\n        }\\n\\n        IOFTV2(vAstrOFT).sendAndCall{value: estimateFee}(\\n            msg.sender,\\n            destChainId,\\n            remoteContract,\\n            _amount,\\n            payload,\\n            _dstGasForCall,\\n            callParams\\n        );\\n\\n        emit Redeem(msg.sender, _amount);\\n    }\\n\\n    function estimateSendAndCallFee(\\n        address caller,\\n        Types.Operation operation,\\n        uint256 _amount,\\n        uint256 gasLimit,\\n        uint64 _dstGasForCall,\\n        bytes calldata _adapterParams\\n    ) public view returns (uint256, bytes memory) {\\n        if (operation == Types.Operation.Redeem) {\\n            bytes memory payload = abi.encode(caller, Types.Operation.Redeem);\\n            (uint256 estimateFee, ) = IOFTV2(vAstrOFT).estimateSendAndCallFee(\\n                destChainId,\\n                remoteContract,\\n                _amount,\\n                payload,\\n                _dstGasForCall,\\n                false,\\n                _adapterParams\\n            );\\n            return (estimateFee, payload);\\n        } else {\\n            Client.EVMTokenAmount[] memory tokenAmounts = new Client.EVMTokenAmount[](1);\\n            Client.EVMTokenAmount memory tokenAmount = Client.EVMTokenAmount({\\n                token: AstrToken,\\n                amount: _amount\\n            });\\n            tokenAmounts[0] = tokenAmount;\\n            bytes memory data = abi.encode(msg.sender, Types.Operation.Mint, address(0), 0);\\n            Client.EVM2AnyMessage memory message = Client.EVM2AnyMessage({\\n                receiver: abi.encode(caller),\\n                data: data,\\n                tokenAmounts: tokenAmounts,\\n                extraArgs: Client._argsToBytes(\\n                    Client.EVMExtraArgsV1({\\n                        gasLimit: gasLimit // Gas limit for the callback on the destination chain\\n                    })),\\n                feeToken: address(0)\\n            });\\n\\n            return (IRouterClient(SoneiumRouter).getFee(\\n                astarChainSelector,\\n                message\\n            ), abi.encode(\\\"\\\"));\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x122d93ec11ce3e1ee7ee3bf1149822316c548add32f9da92a2ced40350ec4e6c\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/ICommonOFT.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface ICommonOFT is IERC165 {\\n    struct LzCallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n        bytes adapterParams;\\n    }\\n\\n    /**\\n     * @dev estimate send token `_tokenId` to (`_dstChainId`, `_toAddress`)\\n     * _dstChainId - L0 defined chain id to send tokens too\\n     * _toAddress - dynamic bytes array which contains the address to whom you are sending tokens to on the dstChain\\n     * _amount - amount of the tokens to transfer\\n     * _useZro - indicates to use zro to pay L0 fees\\n     * _adapterParam - flexible bytes array to indicate messaging adapter services in L0\\n     */\\n    function estimateSendFee(\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bool _useZro,\\n        bytes calldata _adapterParams\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    function estimateSendAndCallFee(\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bytes calldata _payload,\\n        uint64 _dstGasForCall,\\n        bool _useZro,\\n        bytes calldata _adapterParams\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    /**\\n     * @dev returns the circulating amount of tokens on current chain\\n     */\\n    function circulatingSupply() external view returns (uint);\\n\\n    /**\\n     * @dev returns the address of the ERC20 token\\n     */\\n    function token() external view returns (address);\\n}\\n\",\"keccak256\":\"0x685586b87541a45bf6b634ef5e356a8968b3c23b33e929dec1807614db26cd6a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IOFTV2.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"./ICommonOFT.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface IOFTV2 is ICommonOFT {\\n    /**\\n     * @dev send `_amount` amount of token to (`_dstChainId`, `_toAddress`) from `_from`\\n     * `_from` the owner of token\\n     * `_dstChainId` the destination chain identifier\\n     * `_toAddress` can be any size depending on the `dstChainId`.\\n     * `_amount` the quantity of tokens in wei\\n     * `_refundAddress` the address LayerZero refunds if too much message fee is sent\\n     * `_zroPaymentAddress` set to address(0x0) if not paying in ZRO (LayerZero Token)\\n     * `_adapterParams` is a flexible bytes array to indicate messaging adapter services\\n     */\\n    function sendFrom(\\n        address _from,\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        LzCallParams calldata _callParams\\n    ) external payable;\\n\\n    function sendAndCall(\\n        address _from,\\n        uint16 _dstChainId,\\n        bytes32 _toAddress,\\n        uint _amount,\\n        bytes calldata _payload,\\n        uint64 _dstGasForCall,\\n        LzCallParams calldata _callParams\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xd585b8f5c6b3569cd2d5d5d04345f17e9bf0d3f4ea4d0831cb4da6129629a555\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/Types.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\ninterface Types {\\n    enum Operation {\\n        Mint,\\n        Redeem\\n    }\\n}\\n\",\"keccak256\":\"0x2c1400e68ac0c25b82495ea5b014f265784ba28000644290493915e04157ad15\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033806000816100675760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615610097576100978161009f565b505050610149565b6001600160a01b0381163314156100f85760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161005e565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b611537806101586000396000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461015a578063aabdc08214610178578063aed7bbbb146101a5578063c0afb3f4146101b8578063c8b75259146101d8578063f2fde38b146101f857600080fd5b80630663b2d1146100a157806315725162146100ca57806334a336cb146100f857806347235ad71461013057806379ba509714610145575b600080fd5b3480156100ad57600080fd5b506100b760025481565b6040519081526020015b60405180910390f35b3480156100d657600080fd5b506100ea6100e5366004610f8b565b610218565b6040516100c1929190611061565b34801561010457600080fd5b50600354610118906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b61014361013e366004611082565b6104de565b005b34801561015157600080fd5b506101436109be565b34801561016657600080fd5b506000546001600160a01b0316610118565b34801561018457600080fd5b506100b76101933660046110d1565b60046020526000908152604090205481565b6101436101b33660046110f3565b610a68565b3480156101c457600080fd5b506101436101d336600461114d565b610cae565b3480156101e457600080fd5b506101436101f3366004611168565b610d29565b34801561020457600080fd5b5061014361021336600461114d565b610daf565b60006060600188600181111561023057610230611192565b14156102f457600089600160405160200161024c9291906111ca565b60408051601f198184030181529082905260025463a4c51df560e01b83529092506000917360336f9296c79da4294a19153ec87f8e52158e5f9163a4c51df5916102a79160d2918e9088908e9089908f908f906004016111e7565b6040805180830381865afa1580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e79190611260565b5093509091506104d29050565b604080516001808252818301909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161030b57905050905060006040518060400160405280732cae934a1e84f693fbb78ca5ed3b0a68932594416001600160a01b031681526020018a8152509050808260008151811061037e5761037e611284565b602002602001018190525060003360008060006040516020016103a4949392919061129a565b60408051808303601f1901815260a083019091526001600160a01b038e1660c083015291506000908060e08101604051602081830303815290604052815260200183815260200185815260200160006001600160a01b0316815260200161041860405180602001604052808e815250610dc3565b90526040516320487ded60e01b8152909150738c8b88d827fe14df2bc6392947d513c86afd6977906320487ded9061045e9067591fe6e0e1a0a5a99085906004016112d4565b602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f91906113ae565b6040516020016104ba90602080825260009082015260400190565b60405160208183030381529060405295509550505050505b97509795505050505050565b6000805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec548410156105315760405162461bcd60e51b8152600401610528906113c7565b60405180910390fd5b8061054e5760405162461bcd60e51b8152600401610528906113c7565b6040516323b872dd60e01b815233600482015230602482015260448101859052732cae934a1e84f693fbb78ca5ed3b0a6893259441906323b872dd906064016020604051808303816000875af11580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d091906113f1565b50604080516001808252818301909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816105e857905050905060006040518060400160405280732cae934a1e84f693fbb78ca5ed3b0a68932594416001600160a01b03168152602001878152509050808260008151811061065b5761065b611284565b6020026020010181905250600033600087876040516020016106809493929190611413565b60408051808303601f1901815260a083019091526003546001600160a01b031660c083015291506000908060e08101604051602081830303815290604052815260200183815260200185815260200160006001600160a01b031681526020016106f6604051806020016040528089815250610dc3565b905260405163095ea7b360e01b8152738c8b88d827fe14df2bc6392947d513c86afd697760048201819052602482018b9052919250732cae934a1e84f693fbb78ca5ed3b0a68932594419063095ea7b3906044016020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906113f1565b506040516320487ded60e01b81526000906001600160a01b038316906320487ded906107c79067591fe6e0e1a0a5a99087906004016112d4565b602060405180830381865afa1580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080891906113ae565b90508034101561084a5760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b6044820152606401610528565b8034146108ee57600061085d8234611450565b604051909150600090339083908381818185875af1925050503d80600081146108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b50509050806108eb5760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b6044820152606401610528565b50505b6040516396f4e9f960e01b81526001600160a01b038316906396f4e9f99083906109269067591fe6e0e1a0a5a99088906004016112d4565b60206040518083038185885af1158015610944573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061096991906113ae565b5060405163ffffffff891681526001600160a01b038a16908b9033907fd4f11ed615cfae7c9b9debc0b8bfc9f3253164b0106cffaa6ea801a29f3b13579060200160405180910390a450505050505050505050565b6001546001600160a01b03163314610a115760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606401610528565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b600160005260046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0554841015610ab35760405162461bcd60e51b8152600401610528906113c7565b60408051606081018252338152600060208083018290528351601f860182900482028101820185528581529193830191908690869081908401838280828437600092018290525093909452509293509150819050610b1733600189848a8a8a610218565b9150915081341015610b5b5760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b6044820152606401610528565b813414610bff576000610b6e8334611450565b604051909150600090339083908381818185875af1925050503d8060008114610bb3576040519150601f19603f3d011682016040523d82523d6000602084013e610bb8565b606091505b5050905080610bfc5760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b6044820152606401610528565b50505b600254604051630ec4076960e31b81527360336f9296c79da4294a19153ec87f8e52158e5f916376203b48918591610c4691339160d2918e9089908f908d90600401611475565b6000604051808303818588803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b50506040518a93503392507f222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a69150600090a350505050505050565b610cb6610e00565b6001600160a01b038116610d055760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c995b5bdd1950dbdb9d1c9858dd60521b6044820152606401610528565b600380546001600160a01b039092166001600160a01b031990921682179055600255565b610d31610e00565b80610d725760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5a5b905b5bdd5b9d607a1b6044820152606401610528565b8060046000846001811115610d8957610d89611192565b6001811115610d9a57610d9a611192565b81526020810191909152604001600020555050565b610db7610e00565b610dc081610e55565b50565b60408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b6000546001600160a01b03163314610e535760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610528565b565b6001600160a01b038116331415610eae5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610528565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80356001600160a01b0381168114610f1657600080fd5b919050565b803560028110610f1657600080fd5b803567ffffffffffffffff81168114610f1657600080fd5b60008083601f840112610f5457600080fd5b50813567ffffffffffffffff811115610f6c57600080fd5b602083019150836020828501011115610f8457600080fd5b9250929050565b600080600080600080600060c0888a031215610fa657600080fd5b610faf88610eff565b9650610fbd60208901610f1b565b95506040880135945060608801359350610fd960808901610f2a565b925060a088013567ffffffffffffffff811115610ff557600080fd5b6110018a828b01610f42565b989b979a50959850939692959293505050565b6000815180845260005b8181101561103a5760208185018101518683018201520161101e565b8181111561104c576000602083870101525b50601f01601f19169290920160200192915050565b82815260406020820152600061107a6040830184611014565b949350505050565b6000806000806080858703121561109857600080fd5b843593506110a860208601610eff565b9250604085013563ffffffff811681146110c157600080fd5b9396929550929360600135925050565b6000602082840312156110e357600080fd5b6110ec82610f1b565b9392505050565b6000806000806060858703121561110957600080fd5b8435935061111960208601610f2a565b9250604085013567ffffffffffffffff81111561113557600080fd5b61114187828801610f42565b95989497509550505050565b60006020828403121561115f57600080fd5b6110ec82610eff565b6000806040838503121561117b57600080fd5b61118483610f1b565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b600281106111c657634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0383168152604081016110ec60208301846111a8565b61ffff8916815287602082015286604082015260e06060820152600061121060e0830188611014565b67ffffffffffffffff8716608084015285151560a084015282810360c0840152838152838560208301376000602085830101526020601f19601f8601168201019150509998505050505050505050565b6000806040838503121561127357600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825260808201906112b960208401876111a8565b80851660408401525060ff8316606083015295945050505050565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261130160e0860182611014565b905081860151603f198087840301606088015261131e8383611014565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561137157845180516001600160a01b031683528601518683015293850193600193909301929086019061133f565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506113a08187611014565b9a9950505050505050505050565b6000602082840312156113c057600080fd5b5051919050565b60208082526010908201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b604082015260600190565b60006020828403121561140357600080fd5b815180151581146110ec57600080fd5b6001600160a01b038581168252608082019061143260208401876111a8565b80851660408401525063ffffffff8316606083015295945050505050565b60008282101561147057634e487b7160e01b600052601160045260246000fd5b500390565b600060018060a01b03808a16835261ffff8916602084015287604084015286606084015260e060808401526114ad60e0840187611014565b67ffffffffffffffff861660a085015283810360c085015281855116815281602086015116602082015260408501519150606060408201526114f26060820183611014565b9b9a505050505050505050505056fea2646970667358221220645cb17c79a380db1f9375500238a4bf5daada33d19f973fb712a9f5ff19769464736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461015a578063aabdc08214610178578063aed7bbbb146101a5578063c0afb3f4146101b8578063c8b75259146101d8578063f2fde38b146101f857600080fd5b80630663b2d1146100a157806315725162146100ca57806334a336cb146100f857806347235ad71461013057806379ba509714610145575b600080fd5b3480156100ad57600080fd5b506100b760025481565b6040519081526020015b60405180910390f35b3480156100d657600080fd5b506100ea6100e5366004610f8b565b610218565b6040516100c1929190611061565b34801561010457600080fd5b50600354610118906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b61014361013e366004611082565b6104de565b005b34801561015157600080fd5b506101436109be565b34801561016657600080fd5b506000546001600160a01b0316610118565b34801561018457600080fd5b506100b76101933660046110d1565b60046020526000908152604090205481565b6101436101b33660046110f3565b610a68565b3480156101c457600080fd5b506101436101d336600461114d565b610cae565b3480156101e457600080fd5b506101436101f3366004611168565b610d29565b34801561020457600080fd5b5061014361021336600461114d565b610daf565b60006060600188600181111561023057610230611192565b14156102f457600089600160405160200161024c9291906111ca565b60408051601f198184030181529082905260025463a4c51df560e01b83529092506000917360336f9296c79da4294a19153ec87f8e52158e5f9163a4c51df5916102a79160d2918e9088908e9089908f908f906004016111e7565b6040805180830381865afa1580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e79190611260565b5093509091506104d29050565b604080516001808252818301909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161030b57905050905060006040518060400160405280732cae934a1e84f693fbb78ca5ed3b0a68932594416001600160a01b031681526020018a8152509050808260008151811061037e5761037e611284565b602002602001018190525060003360008060006040516020016103a4949392919061129a565b60408051808303601f1901815260a083019091526001600160a01b038e1660c083015291506000908060e08101604051602081830303815290604052815260200183815260200185815260200160006001600160a01b0316815260200161041860405180602001604052808e815250610dc3565b90526040516320487ded60e01b8152909150738c8b88d827fe14df2bc6392947d513c86afd6977906320487ded9061045e9067591fe6e0e1a0a5a99085906004016112d4565b602060405180830381865afa15801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f91906113ae565b6040516020016104ba90602080825260009082015260400190565b60405160208183030381529060405295509550505050505b97509795505050505050565b6000805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec548410156105315760405162461bcd60e51b8152600401610528906113c7565b60405180910390fd5b8061054e5760405162461bcd60e51b8152600401610528906113c7565b6040516323b872dd60e01b815233600482015230602482015260448101859052732cae934a1e84f693fbb78ca5ed3b0a6893259441906323b872dd906064016020604051808303816000875af11580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d091906113f1565b50604080516001808252818301909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816105e857905050905060006040518060400160405280732cae934a1e84f693fbb78ca5ed3b0a68932594416001600160a01b03168152602001878152509050808260008151811061065b5761065b611284565b6020026020010181905250600033600087876040516020016106809493929190611413565b60408051808303601f1901815260a083019091526003546001600160a01b031660c083015291506000908060e08101604051602081830303815290604052815260200183815260200185815260200160006001600160a01b031681526020016106f6604051806020016040528089815250610dc3565b905260405163095ea7b360e01b8152738c8b88d827fe14df2bc6392947d513c86afd697760048201819052602482018b9052919250732cae934a1e84f693fbb78ca5ed3b0a68932594419063095ea7b3906044016020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906113f1565b506040516320487ded60e01b81526000906001600160a01b038316906320487ded906107c79067591fe6e0e1a0a5a99087906004016112d4565b602060405180830381865afa1580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080891906113ae565b90508034101561084a5760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b6044820152606401610528565b8034146108ee57600061085d8234611450565b604051909150600090339083908381818185875af1925050503d80600081146108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b50509050806108eb5760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b6044820152606401610528565b50505b6040516396f4e9f960e01b81526001600160a01b038316906396f4e9f99083906109269067591fe6e0e1a0a5a99088906004016112d4565b60206040518083038185885af1158015610944573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061096991906113ae565b5060405163ffffffff891681526001600160a01b038a16908b9033907fd4f11ed615cfae7c9b9debc0b8bfc9f3253164b0106cffaa6ea801a29f3b13579060200160405180910390a450505050505050505050565b6001546001600160a01b03163314610a115760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606401610528565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b600160005260046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0554841015610ab35760405162461bcd60e51b8152600401610528906113c7565b60408051606081018252338152600060208083018290528351601f860182900482028101820185528581529193830191908690869081908401838280828437600092018290525093909452509293509150819050610b1733600189848a8a8a610218565b9150915081341015610b5b5760405162461bcd60e51b815260206004820152600d60248201526c746f6f20736d616c6c2066656560981b6044820152606401610528565b813414610bff576000610b6e8334611450565b604051909150600090339083908381818185875af1925050503d8060008114610bb3576040519150601f19603f3d011682016040523d82523d6000602084013e610bb8565b606091505b5050905080610bfc5760405162461bcd60e51b815260206004820152601060248201526f19985a5b1959081d1bc81c99599d5b9960821b6044820152606401610528565b50505b600254604051630ec4076960e31b81527360336f9296c79da4294a19153ec87f8e52158e5f916376203b48918591610c4691339160d2918e9089908f908d90600401611475565b6000604051808303818588803b158015610c5f57600080fd5b505af1158015610c73573d6000803e3d6000fd5b50506040518a93503392507f222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a69150600090a350505050505050565b610cb6610e00565b6001600160a01b038116610d055760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c995b5bdd1950dbdb9d1c9858dd60521b6044820152606401610528565b600380546001600160a01b039092166001600160a01b031990921682179055600255565b610d31610e00565b80610d725760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5a5b905b5bdd5b9d607a1b6044820152606401610528565b8060046000846001811115610d8957610d89611192565b6001811115610d9a57610d9a611192565b81526020810191909152604001600020555050565b610db7610e00565b610dc081610e55565b50565b60408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b6000546001600160a01b03163314610e535760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610528565b565b6001600160a01b038116331415610eae5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610528565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80356001600160a01b0381168114610f1657600080fd5b919050565b803560028110610f1657600080fd5b803567ffffffffffffffff81168114610f1657600080fd5b60008083601f840112610f5457600080fd5b50813567ffffffffffffffff811115610f6c57600080fd5b602083019150836020828501011115610f8457600080fd5b9250929050565b600080600080600080600060c0888a031215610fa657600080fd5b610faf88610eff565b9650610fbd60208901610f1b565b95506040880135945060608801359350610fd960808901610f2a565b925060a088013567ffffffffffffffff811115610ff557600080fd5b6110018a828b01610f42565b989b979a50959850939692959293505050565b6000815180845260005b8181101561103a5760208185018101518683018201520161101e565b8181111561104c576000602083870101525b50601f01601f19169290920160200192915050565b82815260406020820152600061107a6040830184611014565b949350505050565b6000806000806080858703121561109857600080fd5b843593506110a860208601610eff565b9250604085013563ffffffff811681146110c157600080fd5b9396929550929360600135925050565b6000602082840312156110e357600080fd5b6110ec82610f1b565b9392505050565b6000806000806060858703121561110957600080fd5b8435935061111960208601610f2a565b9250604085013567ffffffffffffffff81111561113557600080fd5b61114187828801610f42565b95989497509550505050565b60006020828403121561115f57600080fd5b6110ec82610eff565b6000806040838503121561117b57600080fd5b61118483610f1b565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b600281106111c657634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0383168152604081016110ec60208301846111a8565b61ffff8916815287602082015286604082015260e06060820152600061121060e0830188611014565b67ffffffffffffffff8716608084015285151560a084015282810360c0840152838152838560208301376000602085830101526020601f19601f8601168201019150509998505050505050505050565b6000806040838503121561127357600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825260808201906112b960208401876111a8565b80851660408401525060ff8316606083015295945050505050565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261130160e0860182611014565b905081860151603f198087840301606088015261131e8383611014565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561137157845180516001600160a01b031683528601518683015293850193600193909301929086019061133f565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506113a08187611014565b9a9950505050505050505050565b6000602082840312156113c057600080fd5b5051919050565b60208082526010908201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b604082015260600190565b60006020828403121561140357600080fd5b815180151581146110ec57600080fd5b6001600160a01b038581168252608082019061143260208401876111a8565b80851660408401525063ffffffff8316606083015295945050505050565b60008282101561147057634e487b7160e01b600052601160045260246000fd5b500390565b600060018060a01b03808a16835261ffff8916602084015287604084015286606084015260e060808401526114ad60e0840187611014565b67ffffffffffffffff861660a085015283810360c085015281855116815281602086015116602082015260408501519150606060408201526114f26060820183611014565b9b9a505050505050505050505056fea2646970667358221220645cb17c79a380db1f9375500238a4bf5daada33d19f973fb712a9f5ff19769464736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptOwnership()": {
        "notice": "Allows an ownership transfer to be completed by the recipient."
      },
      "owner()": {
        "notice": "Get the current owner"
      },
      "transferOwnership(address)": {
        "notice": "Allows an owner to begin transferring ownership to a new address."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 269,
        "contract": "contracts/SoneiumSlpx.sol:SoneiumSlpx",
        "label": "s_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 271,
        "contract": "contracts/SoneiumSlpx.sol:SoneiumSlpx",
        "label": "s_pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4345,
        "contract": "contracts/SoneiumSlpx.sol:SoneiumSlpx",
        "label": "remoteContract",
        "offset": 0,
        "slot": "2",
        "type": "t_bytes32"
      },
      {
        "astId": 4356,
        "contract": "contracts/SoneiumSlpx.sol:SoneiumSlpx",
        "label": "AstarReceiver",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 4361,
        "contract": "contracts/SoneiumSlpx.sol:SoneiumSlpx",
        "label": "minAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_enum(Operation)5284,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Operation)5284": {
        "encoding": "inplace",
        "label": "enum Types.Operation",
        "numberOfBytes": "1"
      },
      "t_mapping(t_enum(Operation)5284,t_uint256)": {
        "encoding": "mapping",
        "key": "t_enum(Operation)5284",
        "label": "mapping(enum Types.Operation => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}